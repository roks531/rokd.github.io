"use strict";(self.webpackChunkdocusaurus_osebna=self.webpackChunkdocusaurus_osebna||[]).push([["8624"],{8150:function(e,n,s){s.r(n),s.d(n,{metadata:()=>t,contentTitle:()=>a,default:()=>h,assets:()=>o,toc:()=>c,frontMatter:()=>l});var t=JSON.parse('{"id":"postgresql/patroni-cluster","title":"High Availability with Patroni & etcd","description":"Complete guide for setting up a PostgreSQL high-availability cluster using Patroni for automatic failover and etcd for distributed configuration storage.","source":"@site/docs/postgresql/patroni-cluster.mdx","sourceDirName":"postgresql","slug":"/postgresql/patroni-cluster","permalink":"/docs/postgresql/patroni-cluster","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"PostgreSQL Streaming Replication","permalink":"/docs/postgresql/streaming-replication"},"next":{"title":"PostgreSQL Foreign Data Wrapper (FDW)","permalink":"/docs/postgresql/foreign-data-wrapper"}}'),r=s("5893"),i=s("65");let l={sidebar_position:5},a="High Availability with Patroni & etcd",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Part 1: Install etcd on All Nodes",id:"part-1-install-etcd-on-all-nodes",level:2},{value:"Install etcd",id:"install-etcd",level:3},{value:"Configure etcd",id:"configure-etcd",level:3},{value:"Create etcd User",id:"create-etcd-user",level:3},{value:"Start etcd",id:"start-etcd",level:3},{value:"Verify etcd Cluster",id:"verify-etcd-cluster",level:3},{value:"Part 2: Install PostgreSQL on All Nodes",id:"part-2-install-postgresql-on-all-nodes",level:2},{value:"Part 3: Install Patroni on All Nodes",id:"part-3-install-patroni-on-all-nodes",level:2},{value:"Install Dependencies",id:"install-dependencies",level:3},{value:"Configure Patroni",id:"configure-patroni",level:3},{value:"Create Patroni Systemd Service",id:"create-patroni-systemd-service",level:3},{value:"Set Permissions",id:"set-permissions",level:3},{value:"Start Patroni",id:"start-patroni",level:3},{value:"Verify Cluster Status",id:"verify-cluster-status",level:3},{value:"Part 4: HAProxy Setup",id:"part-4-haproxy-setup",level:2},{value:"Install HAProxy",id:"install-haproxy",level:3},{value:"Configure HAProxy",id:"configure-haproxy",level:3},{value:"Start HAProxy",id:"start-haproxy",level:3},{value:"Test HAProxy",id:"test-haproxy",level:3},{value:"Part 5: Testing Failover",id:"part-5-testing-failover",level:2},{value:"Manual Failover",id:"manual-failover",level:3},{value:"Simulate Node Failure",id:"simulate-node-failure",level:3},{value:"Restore Failed Node",id:"restore-failed-node",level:3},{value:"Part 6: Monitoring",id:"part-6-monitoring",level:2},{value:"Check Cluster Status",id:"check-cluster-status",level:3},{value:"Check etcd Cluster",id:"check-etcd-cluster",level:3},{value:"Monitor HAProxy",id:"monitor-haproxy",level:3},{value:"PostgreSQL Monitoring",id:"postgresql-monitoring",level:3},{value:"Automation with autobase",id:"automation-with-autobase",level:2},{value:"About autobase",id:"about-autobase",level:3},{value:"Features",id:"features",level:3},{value:"Quick Start with autobase",id:"quick-start-with-autobase",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Patroni Won&#39;t Start",id:"patroni-wont-start",level:3},{value:"etcd Connection Failed",id:"etcd-connection-failed",level:3},{value:"Split-Brain Scenario",id:"split-brain-scenario",level:3},{value:"HAProxy Shows All Nodes Down",id:"haproxy-shows-all-nodes-down",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Security Enhancements",id:"security-enhancements",level:2},{value:"Enable SSL for PostgreSQL",id:"enable-ssl-for-postgresql",level:3},{value:"Secure etcd with TLS",id:"secure-etcd-with-tls",level:3},{value:"Restrict Network Access",id:"restrict-network-access",level:3},{value:"Additional Resources",id:"additional-resources",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"high-availability-with-patroni--etcd",children:"High Availability with Patroni & etcd"})}),"\n",(0,r.jsx)(n.p,{children:"Complete guide for setting up a PostgreSQL high-availability cluster using Patroni for automatic failover and etcd for distributed configuration storage."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"This guide covers:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Patroni"}),": PostgreSQL cluster management tool with automatic failover"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"etcd"}),": Distributed key-value store for cluster state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HAProxy"}),": Load balancing across PostgreSQL nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Watchdog"}),": Prevention of split-brain scenarios"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"                    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                    \u2502   HAProxy   \u2502\n                    \u2502 192.168.1.50\u2502\n                    \u2502  Port: 5000 \u2502\n                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                           \u2502\n        \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n        \u2502                  \u2502                  \u2502\n   \u250C\u2500\u2500\u2500\u2500\u25BC\u2500\u2500\u2500\u2500\u2510        \u250C\u2500\u2500\u2500\u2500\u25BC\u2500\u2500\u2500\u2500\u2510       \u250C\u2500\u2500\u2500\u2500\u25BC\u2500\u2500\u2500\u2500\u2510\n   \u2502 Node 1  \u2502        \u2502 Node 2  \u2502       \u2502 Node 3  \u2502\n   \u2502Patroni  \u2502\u25C4\u2500\u2500\u2500\u2500\u2500\u2500\u25BA\u2502Patroni  \u2502\u25C4\u2500\u2500\u2500\u2500\u2500\u25BA\u2502Patroni  \u2502\n   \u2502PostgreSQL\u2502       \u2502PostgreSQL\u2502      \u2502PostgreSQL\u2502\n   \u2502  etcd   \u2502        \u2502  etcd   \u2502       \u2502  etcd   \u2502\n   \u2514\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2518        \u2514\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2518\n        \u2502                  \u2502                  \u2502\n        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n              etcd consensus cluster\n"})}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"All three nodes should have:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ubuntu/Debian-based Linux"}),"\n",(0,r.jsx)(n.li,{children:"Network connectivity between nodes"}),"\n",(0,r.jsx)(n.li,{children:"Root or sudo access"}),"\n",(0,r.jsx)(n.li,{children:"Same PostgreSQL version"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"part-1-install-etcd-on-all-nodes",children:"Part 1: Install etcd on All Nodes"}),"\n",(0,r.jsx)(n.p,{children:"etcd provides the distributed consensus needed for cluster coordination."}),"\n",(0,r.jsx)(n.h3,{id:"install-etcd",children:"Install etcd"}),"\n",(0,r.jsxs)(n.p,{children:["On ",(0,r.jsx)(n.strong,{children:"all three nodes"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Download etcd\nETCD_VER=v3.5.9\nGITHUB_URL=https://github.com/etcd-io/etcd/releases/download\nDOWNLOAD_URL=${GITHUB_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz\n\n# Download and extract\ncurl -L ${DOWNLOAD_URL} -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz\ntar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp\n\n# Install binaries\nsudo cp /tmp/etcd-${ETCD_VER}-linux-amd64/etcd* /usr/local/bin/\nsudo chmod +x /usr/local/bin/etcd*\n\n# Verify installation\netcd --version\n"})}),"\n",(0,r.jsx)(n.h3,{id:"configure-etcd",children:"Configure etcd"}),"\n",(0,r.jsx)(n.p,{children:"Create etcd configuration directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo mkdir -p /etc/etcd\nsudo mkdir -p /var/lib/etcd\n"})}),"\n",(0,r.jsx)(n.p,{children:"Create etcd systemd service:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/systemd/system/etcd.service\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"On Node 1"})," (192.168.1.51):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=etcd key-value store\nDocumentation=https://github.com/etcd-io/etcd\nAfter=network.target\n\n[Service]\nType=notify\nUser=etcd\nEnvironment=ETCD_DATA_DIR=/var/lib/etcd\nEnvironment=ETCD_NAME=node1\nEnvironment=ETCD_INITIAL_ADVERTISE_PEER_URLS=http://192.168.1.51:2380\nEnvironment=ETCD_LISTEN_PEER_URLS=http://192.168.1.51:2380\nEnvironment=ETCD_LISTEN_CLIENT_URLS=http://192.168.1.51:2379,http://127.0.0.1:2379\nEnvironment=ETCD_ADVERTISE_CLIENT_URLS=http://192.168.1.51:2379\nEnvironment=ETCD_INITIAL_CLUSTER_TOKEN=patroni-cluster\nEnvironment=ETCD_INITIAL_CLUSTER=node1=http://192.168.1.51:2380,node2=http://192.168.1.52:2380,node3=http://192.168.1.53:2380\nEnvironment=ETCD_INITIAL_CLUSTER_STATE=new\nExecStart=/usr/local/bin/etcd\nRestart=always\nRestartSec=10s\nLimitNOFILE=40000\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"On Node 2"})," (192.168.1.52):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=etcd key-value store\nDocumentation=https://github.com/etcd-io/etcd\nAfter=network.target\n\n[Service]\nType=notify\nUser=etcd\nEnvironment=ETCD_DATA_DIR=/var/lib/etcd\nEnvironment=ETCD_NAME=node2\nEnvironment=ETCD_INITIAL_ADVERTISE_PEER_URLS=http://192.168.1.52:2380\nEnvironment=ETCD_LISTEN_PEER_URLS=http://192.168.1.52:2380\nEnvironment=ETCD_LISTEN_CLIENT_URLS=http://192.168.1.52:2379,http://127.0.0.1:2379\nEnvironment=ETCD_ADVERTISE_CLIENT_URLS=http://192.168.1.52:2379\nEnvironment=ETCD_INITIAL_CLUSTER_TOKEN=patroni-cluster\nEnvironment=ETCD_INITIAL_CLUSTER=node1=http://192.168.1.51:2380,node2=http://192.168.1.52:2380,node3=http://192.168.1.53:2380\nEnvironment=ETCD_INITIAL_CLUSTER_STATE=new\nExecStart=/usr/local/bin/etcd\nRestart=always\nRestartSec=10s\nLimitNOFILE=40000\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"On Node 3"})," (192.168.1.53):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=etcd key-value store\nDocumentation=https://github.com/etcd-io/etcd\nAfter=network.target\n\n[Service]\nType=notify\nUser=etcd\nEnvironment=ETCD_DATA_DIR=/var/lib/etcd\nEnvironment=ETCD_NAME=node3\nEnvironment=ETCD_INITIAL_ADVERTISE_PEER_URLS=http://192.168.1.53:2380\nEnvironment=ETCD_LISTEN_PEER_URLS=http://192.168.1.53:2380\nEnvironment=ETCD_LISTEN_CLIENT_URLS=http://192.168.1.53:2379,http://127.0.0.1:2379\nEnvironment=ETCD_ADVERTISE_CLIENT_URLS=http://192.168.1.53:2379\nEnvironment=ETCD_INITIAL_CLUSTER_TOKEN=patroni-cluster\nEnvironment=ETCD_INITIAL_CLUSTER=node1=http://192.168.1.51:2380,node2=http://192.168.1.52:2380,node3=http://192.168.1.53:2380\nEnvironment=ETCD_INITIAL_CLUSTER_STATE=new\nExecStart=/usr/local/bin/etcd\nRestart=always\nRestartSec=10s\nLimitNOFILE=40000\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,r.jsx)(n.h3,{id:"create-etcd-user",children:"Create etcd User"}),"\n",(0,r.jsxs)(n.p,{children:["On ",(0,r.jsx)(n.strong,{children:"all nodes"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo useradd -r -s /bin/false etcd\nsudo chown -R etcd:etcd /var/lib/etcd\n"})}),"\n",(0,r.jsx)(n.h3,{id:"start-etcd",children:"Start etcd"}),"\n",(0,r.jsxs)(n.p,{children:["On ",(0,r.jsx)(n.strong,{children:"all nodes"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\nsudo systemctl enable etcd\nsudo systemctl start etcd\nsudo systemctl status etcd\n"})}),"\n",(0,r.jsx)(n.h3,{id:"verify-etcd-cluster",children:"Verify etcd Cluster"}),"\n",(0,r.jsx)(n.p,{children:"On any node:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"etcdctl member list\netcdctl endpoint health\n"})}),"\n",(0,r.jsx)(n.p,{children:"Expected output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"127.0.0.1:2379 is healthy: successfully committed proposal: took = 1.234ms\n192.168.1.51:2379 is healthy: successfully committed proposal: took = 1.567ms\n192.168.1.52:2379 is healthy: successfully committed proposal: took = 1.890ms\n"})}),"\n",(0,r.jsx)(n.h2,{id:"part-2-install-postgresql-on-all-nodes",children:"Part 2: Install PostgreSQL on All Nodes"}),"\n",(0,r.jsxs)(n.p,{children:["Install PostgreSQL on ",(0,r.jsx)(n.strong,{children:"all three nodes"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Add PostgreSQL repository\nsudo sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list'\n\n# Import repository key\nwget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\n\n# Update and install\nsudo apt-get update\nsudo apt-get install -y postgresql-15 postgresql-contrib-15\n\n# Stop PostgreSQL (Patroni will manage it)\nsudo systemctl stop postgresql\nsudo systemctl disable postgresql\n"})}),"\n",(0,r.jsx)(n.h2,{id:"part-3-install-patroni-on-all-nodes",children:"Part 3: Install Patroni on All Nodes"}),"\n",(0,r.jsx)(n.p,{children:"Patroni manages the PostgreSQL cluster and handles automatic failover."}),"\n",(0,r.jsx)(n.h3,{id:"install-dependencies",children:"Install Dependencies"}),"\n",(0,r.jsxs)(n.p,{children:["On ",(0,r.jsx)(n.strong,{children:"all nodes"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install -y python3-pip python3-dev libpq-dev\nsudo pip3 install patroni[etcd] psycopg2-binary\n"})}),"\n",(0,r.jsx)(n.h3,{id:"configure-patroni",children:"Configure Patroni"}),"\n",(0,r.jsx)(n.p,{children:"Create Patroni configuration directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo mkdir -p /etc/patroni\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"On Node 1"})," (192.168.1.51):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/patroni/patroni.yml\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'scope: postgres-cluster\nnamespace: /db/\nname: node1\n\nrestapi:\n  listen: 192.168.1.51:8008\n  connect_address: 192.168.1.51:8008\n\netcd:\n  hosts: 192.168.1.51:2379,192.168.1.52:2379,192.168.1.53:2379\n\nbootstrap:\n  dcs:\n    ttl: 30\n    loop_wait: 10\n    retry_timeout: 10\n    maximum_lag_on_failover: 1048576\n    postgresql:\n      use_pg_rewind: true\n      parameters:\n        wal_level: replica\n        hot_standby: "on"\n        max_connections: 100\n        max_wal_senders: 10\n        wal_keep_size: 256MB\n        max_prepared_transactions: 0\n        max_locks_per_transaction: 64\n        track_commit_timestamp: "off"\n\n  initdb:\n  - encoding: UTF8\n  - data-checksums\n\n  pg_hba:\n  - host replication replicator 127.0.0.1/32 scram-sha-256\n  - host replication replicator 192.168.1.0/24 scram-sha-256\n  - host all all 0.0.0.0/0 scram-sha-256\n\n  users:\n    admin:\n      password: admin_password\n      options:\n        - createrole\n        - createdb\n    replicator:\n      password: replicator_password\n      options:\n        - replication\n\npostgresql:\n  listen: 192.168.1.51:5432\n  connect_address: 192.168.1.51:5432\n  data_dir: /var/lib/postgresql/15/main\n  bin_dir: /usr/lib/postgresql/15/bin\n  pgpass: /tmp/pgpass\n  authentication:\n    replication:\n      username: replicator\n      password: replicator_password\n    superuser:\n      username: postgres\n      password: postgres_password\n  parameters:\n    unix_socket_directories: \'/var/run/postgresql\'\n\ntags:\n    nofailover: false\n    noloadbalance: false\n    clonefrom: false\n    nosync: false\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"On Node 2"})," (192.168.1.52):"]}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"/etc/patroni/patroni.yml"})," with the same content, but change:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"name: node2"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"restapi.listen: 192.168.1.52:8008"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"restapi.connect_address: 192.168.1.52:8008"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"postgresql.listen: 192.168.1.52:5432"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"postgresql.connect_address: 192.168.1.52:5432"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"On Node 3"})," (192.168.1.53):"]}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"/etc/patroni/patroni.yml"})," with the same content, but change:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"name: node3"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"restapi.listen: 192.168.1.53:8008"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"restapi.connect_address: 192.168.1.53:8008"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"postgresql.listen: 192.168.1.53:5432"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"postgresql.connect_address: 192.168.1.53:5432"})}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Important",type:"warning",children:(0,r.jsx)(n.p,{children:"Make sure to change the passwords in production! The passwords shown here are examples only."})}),"\n",(0,r.jsx)(n.h3,{id:"create-patroni-systemd-service",children:"Create Patroni Systemd Service"}),"\n",(0,r.jsxs)(n.p,{children:["On ",(0,r.jsx)(n.strong,{children:"all nodes"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/systemd/system/patroni.service\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=Patroni PostgreSQL High-Availability Manager\nAfter=syslog.target network.target etcd.service\n\n[Service]\nType=simple\nUser=postgres\nGroup=postgres\nExecStart=/usr/local/bin/patroni /etc/patroni/patroni.yml\nExecReload=/bin/kill -s HUP $MAINPID\nKillMode=process\nTimeoutSec=30\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set-permissions",children:"Set Permissions"}),"\n",(0,r.jsxs)(n.p,{children:["On ",(0,r.jsx)(n.strong,{children:"all nodes"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo chown postgres:postgres /etc/patroni/patroni.yml\nsudo chmod 600 /etc/patroni/patroni.yml\n"})}),"\n",(0,r.jsx)(n.h3,{id:"start-patroni",children:"Start Patroni"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Important"}),": Start Patroni ",(0,r.jsx)(n.strong,{children:"one node at a time"}),", waiting for each to initialize:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# On Node 1 first\nsudo systemctl daemon-reload\nsudo systemctl enable patroni\nsudo systemctl start patroni\nsudo systemctl status patroni\n\n# Wait 30 seconds, then on Node 2\nsudo systemctl daemon-reload\nsudo systemctl enable patroni\nsudo systemctl start patroni\n\n# Wait 30 seconds, then on Node 3\nsudo systemctl daemon-reload\nsudo systemctl enable patroni\nsudo systemctl start patroni\n"})}),"\n",(0,r.jsx)(n.h3,{id:"verify-cluster-status",children:"Verify Cluster Status"}),"\n",(0,r.jsx)(n.p,{children:"On any node:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"patronictl -c /etc/patroni/patroni.yml list\n"})}),"\n",(0,r.jsx)(n.p,{children:"Expected output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"+ Cluster: postgres-cluster ----+----+-----------+\n| Member | Host          | Role  | State   | TL | Lag in MB |\n+--------+---------------+-------+---------+----+-----------+\n| node1  | 192.168.1.51 | Leader| running |  1 |           |\n| node2  | 192.168.1.52 | Replica| running |  1 |         0 |\n| node3  | 192.168.1.53 | Replica| running |  1 |         0 |\n+--------+---------------+-------+---------+----+-----------+\n"})}),"\n",(0,r.jsx)(n.h2,{id:"part-4-haproxy-setup",children:"Part 4: HAProxy Setup"}),"\n",(0,r.jsx)(n.p,{children:"HAProxy distributes client connections across the PostgreSQL cluster."}),"\n",(0,r.jsx)(n.h3,{id:"install-haproxy",children:"Install HAProxy"}),"\n",(0,r.jsx)(n.p,{children:"On a separate server (or on one of the nodes):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install -y haproxy\n"})}),"\n",(0,r.jsx)(n.h3,{id:"configure-haproxy",children:"Configure HAProxy"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/haproxy/haproxy.cfg\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-conf",children:"global\n    maxconn 100\n    log /dev/log local0\n    log /dev/log local1 notice\n    chroot /var/lib/haproxy\n    stats socket /run/haproxy/admin.sock mode 660 level admin\n    stats timeout 30s\n    user haproxy\n    group haproxy\n    daemon\n\ndefaults\n    log     global\n    mode    tcp\n    retries 2\n    timeout client 30m\n    timeout connect 4s\n    timeout server 30m\n    timeout check 5s\n\nlisten stats\n    mode http\n    bind *:7000\n    stats enable\n    stats uri /\n\nlisten postgres_write\n    bind *:5000\n    option httpchk GET /\n    http-check expect status 200\n    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions\n    server node1 192.168.1.51:5432 maxconn 100 check port 8008\n    server node2 192.168.1.52:5432 maxconn 100 check port 8008\n    server node3 192.168.1.53:5432 maxconn 100 check port 8008\n\nlisten postgres_read\n    bind *:5001\n    option httpchk GET /replica\n    http-check expect status 200\n    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions\n    server node1 192.168.1.51:5432 maxconn 100 check port 8008\n    server node2 192.168.1.52:5432 maxconn 100 check port 8008\n    server node3 192.168.1.53:5432 maxconn 100 check port 8008\n"})}),"\n",(0,r.jsx)(n.h3,{id:"start-haproxy",children:"Start HAProxy"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable haproxy\nsudo systemctl restart haproxy\nsudo systemctl status haproxy\n"})}),"\n",(0,r.jsx)(n.h3,{id:"test-haproxy",children:"Test HAProxy"}),"\n",(0,r.jsx)(n.p,{children:"View stats dashboard:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://192.168.1.50:7000\n"})}),"\n",(0,r.jsx)(n.p,{children:"Connect to primary (write):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"psql -h 192.168.1.50 -p 5000 -U admin postgres\n"})}),"\n",(0,r.jsx)(n.p,{children:"Connect to replicas (read):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"psql -h 192.168.1.50 -p 5001 -U admin postgres\n"})}),"\n",(0,r.jsx)(n.h2,{id:"part-5-testing-failover",children:"Part 5: Testing Failover"}),"\n",(0,r.jsx)(n.h3,{id:"manual-failover",children:"Manual Failover"}),"\n",(0,r.jsx)(n.p,{children:"Promote a replica to leader:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# On any node\npatronictl -c /etc/patroni/patroni.yml switchover\n"})}),"\n",(0,r.jsx)(n.p,{children:"You'll be prompted to confirm the switchover."}),"\n",(0,r.jsx)(n.h3,{id:"simulate-node-failure",children:"Simulate Node Failure"}),"\n",(0,r.jsx)(n.p,{children:"Stop Patroni on the current leader:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# On the leader node\nsudo systemctl stop patroni\n"})}),"\n",(0,r.jsx)(n.p,{children:"Patroni will automatically promote a replica within 30 seconds (TTL setting)."}),"\n",(0,r.jsx)(n.p,{children:"Check cluster status:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"patronictl -c /etc/patroni/patroni.yml list\n"})}),"\n",(0,r.jsx)(n.p,{children:"The former replica should now be the leader."}),"\n",(0,r.jsx)(n.h3,{id:"restore-failed-node",children:"Restore Failed Node"}),"\n",(0,r.jsx)(n.p,{children:"Start Patroni again:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start patroni\n"})}),"\n",(0,r.jsx)(n.p,{children:"The node will automatically rejoin as a replica."}),"\n",(0,r.jsx)(n.h2,{id:"part-6-monitoring",children:"Part 6: Monitoring"}),"\n",(0,r.jsx)(n.h3,{id:"check-cluster-status",children:"Check Cluster Status"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# List cluster members\npatronictl -c /etc/patroni/patroni.yml list\n\n# Show detailed history\npatronictl -c /etc/patroni/patroni.yml history\n\n# Check configuration\npatronictl -c /etc/patroni/patroni.yml show-config\n"})}),"\n",(0,r.jsx)(n.h3,{id:"check-etcd-cluster",children:"Check etcd Cluster"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Member list\netcdctl member list\n\n# Cluster health\netcdctl endpoint health --cluster\n\n# Get cluster configuration\netcdctl get --prefix /db/\n"})}),"\n",(0,r.jsx)(n.h3,{id:"monitor-haproxy",children:"Monitor HAProxy"}),"\n",(0,r.jsx)(n.p,{children:"View HAProxy stats:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://192.168.1.50:7000\n"})}),"\n",(0,r.jsx)(n.p,{children:"Check HAProxy logs:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo tail -f /var/log/haproxy.log\n"})}),"\n",(0,r.jsx)(n.h3,{id:"postgresql-monitoring",children:"PostgreSQL Monitoring"}),"\n",(0,r.jsx)(n.p,{children:"On any node:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Check replication status\npsql -U postgres -c "SELECT * FROM pg_stat_replication;"\n\n# Check if node is in recovery\npsql -U postgres -c "SELECT pg_is_in_recovery();"\n\n# Check replication lag\npsql -U postgres -c "SELECT client_addr, state, sync_state, \n  pg_wal_lsn_diff(pg_current_wal_lsn(), replay_lsn) AS lag_bytes \n  FROM pg_stat_replication;"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"automation-with-autobase",children:"Automation with autobase"}),"\n",(0,r.jsxs)(n.p,{children:["For automated deployment of PostgreSQL HA clusters, consider using the ",(0,r.jsx)(n.strong,{children:"autobase"})," project by Vitaly Kukharik."]}),"\n",(0,r.jsx)(n.h3,{id:"about-autobase",children:"About autobase"}),"\n",(0,r.jsxs)(n.p,{children:["Repository: ",(0,r.jsx)(n.a,{href:"https://github.com/vitabaks/autobase",children:"https://github.com/vitabaks/autobase"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"autobase"})," is an Ansible-based automation tool for deploying PostgreSQL high-availability clusters with:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Patroni for automatic failover"}),"\n",(0,r.jsx)(n.li,{children:"etcd/Consul/ZooKeeper for DCS"}),"\n",(0,r.jsx)(n.li,{children:"HAProxy or pgBouncer for connection pooling"}),"\n",(0,r.jsx)(n.li,{children:"Optional monitoring with Prometheus/Grafana"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"features",children:"Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"One-command cluster deployment"}),"\n",(0,r.jsx)(n.li,{children:"Support for cloud providers (AWS, GCP, Azure, DigitalOcean)"}),"\n",(0,r.jsx)(n.li,{children:"Automatic SSL certificate generation"}),"\n",(0,r.jsx)(n.li,{children:"Backup configuration (pgBackRest, WAL-G)"}),"\n",(0,r.jsx)(n.li,{children:"Monitoring stack setup"}),"\n",(0,r.jsx)(n.li,{children:"Rolling updates"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"quick-start-with-autobase",children:"Quick Start with autobase"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clone repository\ngit clone https://github.com/vitabaks/autobase.git\ncd autobase\n\n# Install requirements\npip3 install -r requirements.txt\n\n# Edit inventory\nnano inventory\n\n# Configure variables\nnano vars/main.yml\n\n# Deploy cluster\nansible-playbook deploy_pgcluster.yml\n"})}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"patroni-wont-start",children:"Patroni Won't Start"}),"\n",(0,r.jsx)(n.p,{children:"Check logs:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo journalctl -u patroni -f\n"})}),"\n",(0,r.jsx)(n.p,{children:"Common issues:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"PostgreSQL data directory already exists (remove it for fresh install)"}),"\n",(0,r.jsxs)(n.li,{children:["Wrong permissions on ",(0,r.jsx)(n.code,{children:"/etc/patroni/patroni.yml"})]}),"\n",(0,r.jsx)(n.li,{children:"etcd not accessible"}),"\n",(0,r.jsx)(n.li,{children:"Port conflicts (5432, 8008)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"etcd-connection-failed",children:"etcd Connection Failed"}),"\n",(0,r.jsx)(n.p,{children:"Check etcd is running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status etcd\netcdctl endpoint health\n"})}),"\n",(0,r.jsx)(n.p,{children:"Test connectivity:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl http://192.168.1.51:2379/health\n"})}),"\n",(0,r.jsx)(n.h3,{id:"split-brain-scenario",children:"Split-Brain Scenario"}),"\n",(0,r.jsx)(n.p,{children:"If cluster shows multiple leaders:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Stop Patroni on all nodes:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop patroni\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Clear etcd cluster data:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"etcdctl del --prefix /db/\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Start Patroni one node at a time:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Node 1\nsudo systemctl start patroni\n# Wait 30s\n# Node 2\nsudo systemctl start patroni\n# Wait 30s\n# Node 3\nsudo systemctl start patroni\n"})}),"\n",(0,r.jsx)(n.h3,{id:"haproxy-shows-all-nodes-down",children:"HAProxy Shows All Nodes Down"}),"\n",(0,r.jsx)(n.p,{children:"Check Patroni REST API is accessible:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl http://192.168.1.51:8008/\n"})}),"\n",(0,r.jsx)(n.p,{children:"Should return HTTP 200 for leader, 503 for replica."}),"\n",(0,r.jsx)(n.p,{children:"Verify HAProxy can reach nodes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo tcpdump -i any port 8008\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use Odd Number of Nodes"}),": 3 or 5 nodes for quorum"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitor etcd Health"}),": Critical for cluster consensus"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Set Appropriate TTL"}),": Balance between fast failover and stability"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use Synchronous Replication"}),": For zero data loss"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regular Backup Testing"}),": Patroni is not a backup solution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitor Replication Lag"}),": Alert on excessive lag"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Document Failover Procedures"}),": Train your team"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test Failover Regularly"}),": In development/staging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use Watchdog"}),": Prevent split-brain scenarios (advanced)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Secure Communications"}),": Use SSL/TLS in production"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"security-enhancements",children:"Security Enhancements"}),"\n",(0,r.jsx)(n.h3,{id:"enable-ssl-for-postgresql",children:"Enable SSL for PostgreSQL"}),"\n",(0,r.jsx)(n.p,{children:"Generate certificates:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# On all nodes\nsudo -u postgres openssl req -new -x509 -days 365 -nodes \\\n  -text -out /var/lib/postgresql/15/main/server.crt \\\n  -keyout /var/lib/postgresql/15/main/server.key \\\n  -subj "/CN=postgres"\n\nsudo chmod 600 /var/lib/postgresql/15/main/server.key\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Update ",(0,r.jsx)(n.code,{children:"patroni.yml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"postgresql:\n  parameters:\n    ssl: on\n    ssl_cert_file: '/var/lib/postgresql/15/main/server.crt'\n    ssl_key_file: '/var/lib/postgresql/15/main/server.key'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"secure-etcd-with-tls",children:"Secure etcd with TLS"}),"\n",(0,r.jsx)(n.p,{children:"Generate certificates for etcd:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create CA and certificates\n# See etcd security documentation\n"})}),"\n",(0,r.jsx)(n.p,{children:"Update etcd service to use TLS."}),"\n",(0,r.jsx)(n.h3,{id:"restrict-network-access",children:"Restrict Network Access"}),"\n",(0,r.jsx)(n.p,{children:"Use firewall rules:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Allow only cluster nodes\nsudo ufw allow from 192.168.1.0/24 to any port 2379  # etcd client\nsudo ufw allow from 192.168.1.0/24 to any port 2380  # etcd peer\nsudo ufw allow from 192.168.1.0/24 to any port 5432  # PostgreSQL\nsudo ufw allow from 192.168.1.0/24 to any port 8008  # Patroni REST API\n"})}),"\n",(0,r.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://patroni.readthedocs.io/",children:"Patroni Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://etcd.io/docs/",children:"etcd Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.haproxy.org/#docs",children:"HAProxy Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/vitabaks/autobase",children:"autobase GitHub"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/high-availability.html",children:"PostgreSQL High Availability"})}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return l}});var t=s(7294);let r={},i=t.createContext(r);function l(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);