"use strict";(self.webpackChunkdocusaurus_osebna=self.webpackChunkdocusaurus_osebna||[]).push([["7456"],{6568:function(e,s,n){n.r(s),n.d(s,{metadata:()=>r,contentTitle:()=>a,default:()=>h,assets:()=>o,toc:()=>d,frontMatter:()=>t});var r=JSON.parse('{"id":"postgresql/upgrade-postgresql","title":"Upgrading PostgreSQL on AlmaLinux","description":"Complete guide for upgrading PostgreSQL from one major version to another (e.g., 17 to 18) on AlmaLinux/RHEL-based systems using pg_upgrade.","source":"@site/docs/postgresql/upgrade-postgresql.mdx","sourceDirName":"postgresql","slug":"/postgresql/upgrade-postgresql","permalink":"/docs/postgresql/upgrade-postgresql","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"PostgreSQL LDAP User Sync","permalink":"/docs/postgresql/ldap-sync"},"next":{"title":"PostgreSQL Streaming Replication","permalink":"/docs/postgresql/streaming-replication"}}'),i=n("5893"),l=n("65");let t={sidebar_position:3},a="Upgrading PostgreSQL on AlmaLinux",o={},d=[{value:"Overview",id:"overview",level:2},{value:"Step 1: Install New PostgreSQL Version",id:"step-1-install-new-postgresql-version",level:2},{value:"Step 2: Stop Old PostgreSQL Service",id:"step-2-stop-old-postgresql-service",level:2},{value:"Step 3: Initialize New Cluster",id:"step-3-initialize-new-cluster",level:2},{value:"Step 4: Enable Data Checksums (If Needed)",id:"step-4-enable-data-checksums-if-needed",level:2},{value:"Step 5: Check Upgrade Compatibility",id:"step-5-check-upgrade-compatibility",level:2},{value:"Common Check Failures",id:"common-check-failures",level:3},{value:"Step 6: Perform the Upgrade",id:"step-6-perform-the-upgrade",level:2},{value:"Step 7: Check Upgrade Logs (If Errors Occur)",id:"step-7-check-upgrade-logs-if-errors-occur",level:2},{value:"Common Upgrade Errors",id:"common-upgrade-errors",level:3},{value:"Step 8: Configure New Cluster",id:"step-8-configure-new-cluster",level:2},{value:"Option A: Copy Old Configuration",id:"option-a-copy-old-configuration",level:3},{value:"Option B: Manually Merge Settings",id:"option-b-manually-merge-settings",level:3},{value:"Step 9: Start New PostgreSQL Service",id:"step-9-start-new-postgresql-service",level:2},{value:"Step 10: Run VACUUM ANALYZE",id:"step-10-run-vacuum-analyze",level:2},{value:"Step 11: Update Extensions",id:"step-11-update-extensions",level:2},{value:"Step 12: Cleanup Old Version",id:"step-12-cleanup-old-version",level:2},{value:"Review Cleanup Script",id:"review-cleanup-script",level:3},{value:"Run Cleanup Script",id:"run-cleanup-script",level:3},{value:"Remove Old Packages",id:"remove-old-packages",level:3},{value:"Verification",id:"verification",level:2},{value:"Check PostgreSQL Version",id:"check-postgresql-version",level:3},{value:"Verify Databases",id:"verify-databases",level:3},{value:"Test Connections",id:"test-connections",level:3},{value:"Check Extensions",id:"check-extensions",level:3},{value:"Monitor Logs",id:"monitor-logs",level:3},{value:"Rollback (If Needed)",id:"rollback-if-needed",level:2},{value:"Performance Tuning After Upgrade",id:"performance-tuning-after-upgrade",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Port Already in Use",id:"port-already-in-use",level:3},{value:"Permission Denied",id:"permission-denied",level:3},{value:"SELinux Issues",id:"selinux-issues",level:3},{value:"Connection Refused",id:"connection-refused",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Additional Resources",id:"additional-resources",level:2}];function c(e){let s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"upgrading-postgresql-on-almalinux",children:"Upgrading PostgreSQL on AlmaLinux"})}),"\n",(0,i.jsxs)(s.p,{children:["Complete guide for upgrading PostgreSQL from one major version to another (e.g., 17 to 18) on AlmaLinux/RHEL-based systems using ",(0,i.jsx)(s.code,{children:"pg_upgrade"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(s.p,{children:["PostgreSQL major version upgrades require migrating data from the old version to the new one. The ",(0,i.jsx)(s.code,{children:"pg_upgrade"})," tool provides a fast, in-place upgrade with minimal downtime using hard links."]}),"\n",(0,i.jsx)(s.admonition,{title:"Before You Start",type:"warning",children:(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Backup your database"})," before starting the upgrade"]}),"\n",(0,i.jsx)(s.li,{children:"Plan for downtime (though upgrade is usually fast)"}),"\n",(0,i.jsx)(s.li,{children:"Test the upgrade process in a development environment first"}),"\n",(0,i.jsxs)(s.li,{children:["Ensure you have enough disk space (especially if not using ",(0,i.jsx)(s.code,{children:"--link"}),")"]}),"\n"]})}),"\n",(0,i.jsx)(s.h2,{id:"step-1-install-new-postgresql-version",children:"Step 1: Install New PostgreSQL Version"}),"\n",(0,i.jsx)(s.p,{children:"Install the new PostgreSQL version and any extensions you need:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo dnf install postgresql18 postgresql18-server postgresql18-contrib\n"})}),"\n",(0,i.jsx)(s.p,{children:"If you use PostGIS or other extensions:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo dnf install postgis36_18\n"})}),"\n",(0,i.jsxs)(s.admonition,{title:"Extension Versions",type:"tip",children:[(0,i.jsx)(s.p,{children:"Match extension versions to your PostgreSQL version. For example:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["PostGIS 3.6 for PostgreSQL 18: ",(0,i.jsx)(s.code,{children:"postgis36_18"})]}),"\n",(0,i.jsxs)(s.li,{children:["PostGIS 3.6 for PostgreSQL 17: ",(0,i.jsx)(s.code,{children:"postgis36_17"})]}),"\n"]})]}),"\n",(0,i.jsx)(s.h2,{id:"step-2-stop-old-postgresql-service",children:"Step 2: Stop Old PostgreSQL Service"}),"\n",(0,i.jsx)(s.p,{children:"Stop the running PostgreSQL service:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo systemctl stop postgresql-17\n"})}),"\n",(0,i.jsx)(s.p,{children:"Verify it's stopped:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo systemctl status postgresql-17\n"})}),"\n",(0,i.jsx)(s.h2,{id:"step-3-initialize-new-cluster",children:"Step 3: Initialize New Cluster"}),"\n",(0,i.jsx)(s.p,{children:"Initialize the new PostgreSQL data directory:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo /usr/pgsql-18/bin/postgresql-18-setup initdb\n"})}),"\n",(0,i.jsxs)(s.p,{children:["This creates a new, empty database cluster at ",(0,i.jsx)(s.code,{children:"/var/lib/pgsql/18/data"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"step-4-enable-data-checksums-if-needed",children:"Step 4: Enable Data Checksums (If Needed)"}),"\n",(0,i.jsx)(s.p,{children:"If you encounter an error about data checksums during the upgrade check:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"old cluster does not use data checksums but the new one does\n"})}),"\n",(0,i.jsx)(s.p,{children:"Enable checksums on the old cluster:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo -iu postgres /usr/pgsql-17/bin/pg_checksums \\\n  --enable --progress --verbose \\\n  -D /var/lib/pgsql/17/data\n"})}),"\n",(0,i.jsx)(s.p,{children:"Verify checksums are enabled:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo -iu postgres /usr/pgsql-17/bin/pg_controldata /var/lib/pgsql/17/data \\\n  | grep 'Data page checksum'\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Expected output: ",(0,i.jsx)(s.code,{children:"Data page checksum version: 1"})]}),"\n",(0,i.jsx)(s.admonition,{title:"What are Data Checksums?",type:"info",children:(0,i.jsx)(s.p,{children:"Data checksums detect corruption in data files. They're recommended for production databases. The new cluster enables them by default."})}),"\n",(0,i.jsx)(s.h2,{id:"step-5-check-upgrade-compatibility",children:"Step 5: Check Upgrade Compatibility"}),"\n",(0,i.jsxs)(s.p,{children:["Run ",(0,i.jsx)(s.code,{children:"pg_upgrade"})," in check mode to verify compatibility:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo -iu postgres /usr/pgsql-18/bin/pg_upgrade \\\n  --old-bindir=/usr/pgsql-17/bin \\\n  --new-bindir=/usr/pgsql-18/bin \\\n  --old-datadir=/var/lib/pgsql/17/data \\\n  --new-datadir=/var/lib/pgsql/18/data \\\n  --link --check\n"})}),"\n",(0,i.jsx)(s.p,{children:"This performs compatibility checks without making changes."}),"\n",(0,i.jsx)(s.admonition,{title:"Understanding the Options",type:"tip",children:(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"--old-bindir"}),": Path to old PostgreSQL binaries"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"--new-bindir"}),": Path to new PostgreSQL binaries"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"--old-datadir"}),": Path to old data directory"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"--new-datadir"}),": Path to new data directory"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"--link"}),": Use hard links (fast, saves space)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"--check"}),": Only check compatibility, don't upgrade"]}),"\n"]})}),"\n",(0,i.jsx)(s.h3,{id:"common-check-failures",children:"Common Check Failures"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Extension version mismatch:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Install matching extension versions\nsudo dnf install postgis36_17 postgis36_18\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Old server still running:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo systemctl stop postgresql-17\n"})}),"\n",(0,i.jsx)(s.h2,{id:"step-6-perform-the-upgrade",children:"Step 6: Perform the Upgrade"}),"\n",(0,i.jsx)(s.p,{children:"If the check passes, run the actual upgrade:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'sudo -iu postgres /usr/pgsql-18/bin/pg_upgrade \\\n  --old-bindir=/usr/pgsql-17/bin \\\n  --new-bindir=/usr/pgsql-18/bin \\\n  --old-datadir=/var/lib/pgsql/17/data \\\n  --new-datadir=/var/lib/pgsql/18/data \\\n  --link -j "$(nproc)"\n'})}),"\n",(0,i.jsx)(s.p,{children:"Additional flags:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:'-j "$(nproc)"'}),": Use all CPU cores for parallel processing (faster)"]}),"\n"]}),"\n",(0,i.jsxs)(s.admonition,{title:"Using --link",type:"caution",children:[(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"--link"})," flag creates hard links instead of copying files. This is much faster but:"]}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Old and new data directories must be on the same filesystem"}),"\n",(0,i.jsx)(s.li,{children:"You cannot revert to the old version without a backup"}),"\n",(0,i.jsx)(s.li,{children:"If upgrade fails, you may need to restore from backup"}),"\n"]})]}),"\n",(0,i.jsx)(s.h2,{id:"step-7-check-upgrade-logs-if-errors-occur",children:"Step 7: Check Upgrade Logs (If Errors Occur)"}),"\n",(0,i.jsx)(s.p,{children:"If the upgrade fails, check the logs:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'sudo -iu postgres bash -s <<\'BASH\'\ndir=$(ls -d /var/lib/pgsql/18/data/pg_upgrade_output.d/*/log | tail -1)\nfor f in "$dir"/pg_upgrade_dump_*.log; do\n  echo "===== $f ====="\n  egrep -i "ERROR|FATAL|PANIC" "$f" || tail -n 50 "$f"\ndone\nBASH\n'})}),"\n",(0,i.jsx)(s.h3,{id:"common-upgrade-errors",children:"Common Upgrade Errors"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"PostGIS Extension Error:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"could not load library postgis-3.so\n"})}),"\n",(0,i.jsx)(s.p,{children:"Solution: Install PostGIS for both versions:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo dnf install postgis36_17 postgis36_18\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Extension Version Mismatch:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'extension "xxx" has incompatible version\n'})}),"\n",(0,i.jsx)(s.p,{children:"Solution: Update the extension in the old cluster first or install compatible versions."}),"\n",(0,i.jsx)(s.h2,{id:"step-8-configure-new-cluster",children:"Step 8: Configure New Cluster"}),"\n",(0,i.jsx)(s.p,{children:"Copy or merge your configuration files:"}),"\n",(0,i.jsx)(s.h3,{id:"option-a-copy-old-configuration",children:"Option A: Copy Old Configuration"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo cp /var/lib/pgsql/17/data/postgresql.conf /var/lib/pgsql/18/data/\nsudo cp /var/lib/pgsql/17/data/pg_hba.conf /var/lib/pgsql/18/data/\n"})}),"\n",(0,i.jsx)(s.h3,{id:"option-b-manually-merge-settings",children:"Option B: Manually Merge Settings"}),"\n",(0,i.jsx)(s.p,{children:"Compare and merge settings manually:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# View old config\nsudo cat /var/lib/pgsql/17/data/postgresql.conf\n\n# Edit new config\nsudo -iu postgres vi /var/lib/pgsql/18/data/postgresql.conf\n"})}),"\n",(0,i.jsx)(s.p,{children:"Common settings to check:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"listen_addresses"})}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"port"})," (change if testing both versions)"]}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"max_connections"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"shared_buffers"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"work_mem"})}),"\n",(0,i.jsx)(s.li,{children:"SSL settings"}),"\n",(0,i.jsxs)(s.li,{children:["Authentication settings in ",(0,i.jsx)(s.code,{children:"pg_hba.conf"})]}),"\n"]}),"\n",(0,i.jsx)(s.admonition,{title:"Configuration Compatibility",type:"warning",children:(0,i.jsx)(s.p,{children:"Some configuration parameters may have changed between versions. Review the PostgreSQL release notes for deprecated or changed parameters."})}),"\n",(0,i.jsx)(s.h2,{id:"step-9-start-new-postgresql-service",children:"Step 9: Start New PostgreSQL Service"}),"\n",(0,i.jsx)(s.p,{children:"Enable and start the new PostgreSQL service:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo systemctl enable postgresql-18\nsudo systemctl start postgresql-18\n"})}),"\n",(0,i.jsx)(s.p,{children:"Check status:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo systemctl status postgresql-18\n"})}),"\n",(0,i.jsx)(s.p,{children:"Verify the port:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo ss -tlnp | grep postgres\n"})}),"\n",(0,i.jsx)(s.h2,{id:"step-10-run-vacuum-analyze",children:"Step 10: Run VACUUM ANALYZE"}),"\n",(0,i.jsx)(s.p,{children:"Optimize the database statistics:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo -iu postgres /usr/pgsql-18/bin/vacuumdb \\\n  --all --analyze-in-stages --verbose\n"})}),"\n",(0,i.jsxs)(s.p,{children:["This updates statistics for the query planner. The ",(0,i.jsx)(s.code,{children:"--analyze-in-stages"})," option runs a fast analyze first, then a more thorough one."]}),"\n",(0,i.jsx)(s.admonition,{title:"Why VACUUM ANALYZE?",type:"info",children:(0,i.jsx)(s.p,{children:"After upgrading, the new version needs to collect fresh statistics about your data for optimal query performance."})}),"\n",(0,i.jsx)(s.h2,{id:"step-11-update-extensions",children:"Step 11: Update Extensions"}),"\n",(0,i.jsx)(s.p,{children:"If you have extensions installed, update them:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# The upgrade process creates this script\nsudo -iu postgres /usr/pgsql-18/bin/psql -f ~postgres/update_extensions.sql\n"})}),"\n",(0,i.jsx)(s.p,{children:"Or manually for each database:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Connect to each database\n\\c mydatabase\n\n-- Update all extensions\nSELECT 'ALTER EXTENSION ' || extname || ' UPDATE;'\nFROM pg_extension\nWHERE extname NOT IN ('plpgsql');\n\n-- Run the generated commands\nALTER EXTENSION postgis UPDATE;\nALTER EXTENSION pg_stat_statements UPDATE;\n"})}),"\n",(0,i.jsx)(s.h2,{id:"step-12-cleanup-old-version",children:"Step 12: Cleanup Old Version"}),"\n",(0,i.jsx)(s.h3,{id:"review-cleanup-script",children:"Review Cleanup Script"}),"\n",(0,i.jsx)(s.p,{children:"Check what will be deleted:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo -iu postgres bash -lc 'echo \"Script contents:\"; cat ~postgres/delete_old_cluster.sh'\n"})}),"\n",(0,i.jsx)(s.h3,{id:"run-cleanup-script",children:"Run Cleanup Script"}),"\n",(0,i.jsx)(s.p,{children:"If everything looks good, delete the old cluster:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo -iu postgres bash ~postgres/delete_old_cluster.sh\n"})}),"\n",(0,i.jsx)(s.h3,{id:"remove-old-packages",children:"Remove Old Packages"}),"\n",(0,i.jsx)(s.p,{children:"Uninstall the old PostgreSQL version:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo dnf remove -y postgresql17-server postgresql17 postgresql17-contrib\n"})}),"\n",(0,i.jsx)(s.p,{children:"Remove old extensions:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo dnf remove -y postgis36_17\n"})}),"\n",(0,i.jsxs)(s.admonition,{title:"Before Cleanup",type:"danger",children:[(0,i.jsx)(s.p,{children:"Only delete the old cluster after:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Confirming the new version works correctly"}),"\n",(0,i.jsx)(s.li,{children:"Testing all applications and connections"}),"\n",(0,i.jsx)(s.li,{children:"Verifying all data is accessible"}),"\n",(0,i.jsx)(s.li,{children:"Ideally, after a few days of production use"}),"\n"]})]}),"\n",(0,i.jsx)(s.h2,{id:"verification",children:"Verification"}),"\n",(0,i.jsx)(s.h3,{id:"check-postgresql-version",children:"Check PostgreSQL Version"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'sudo -iu postgres psql -c "SELECT version();"\n'})}),"\n",(0,i.jsx)(s.h3,{id:"verify-databases",children:"Verify Databases"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo -iu postgres psql -l\n"})}),"\n",(0,i.jsx)(s.h3,{id:"test-connections",children:"Test Connections"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"psql -h localhost -U myuser -d mydb\n"})}),"\n",(0,i.jsx)(s.h3,{id:"check-extensions",children:"Check Extensions"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM pg_available_extensions ORDER BY name;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"monitor-logs",children:"Monitor Logs"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo tail -f /var/lib/pgsql/18/data/log/postgresql-*.log\n"})}),"\n",(0,i.jsx)(s.h2,{id:"rollback-if-needed",children:"Rollback (If Needed)"}),"\n",(0,i.jsxs)(s.p,{children:["If you didn't use ",(0,i.jsx)(s.code,{children:"--link"})," and kept the old data:"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Stop new version:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo systemctl stop postgresql-18\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Start old version:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo systemctl start postgresql-17\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Restore from backup if needed"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.admonition,{title:"Rollback with --link",type:"warning",children:(0,i.jsxs)(s.p,{children:["If you used ",(0,i.jsx)(s.code,{children:"--link"}),", rollback is not possible without restoring from backup because the old data directory was modified."]})}),"\n",(0,i.jsx)(s.h2,{id:"performance-tuning-after-upgrade",children:"Performance Tuning After Upgrade"}),"\n",(0,i.jsx)(s.p,{children:"Update configuration for PostgreSQL 18:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo -iu postgres vi /var/lib/pgsql/18/data/postgresql.conf\n"})}),"\n",(0,i.jsx)(s.p,{children:"Consider new PostgreSQL 18 features and parameters:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Review release notes for new settings"}),"\n",(0,i.jsx)(s.li,{children:"Adjust memory settings based on new version"}),"\n",(0,i.jsx)(s.li,{children:"Enable new performance features"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Restart after changes:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo systemctl restart postgresql-18\n"})}),"\n",(0,i.jsx)(s.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(s.h3,{id:"port-already-in-use",children:"Port Already in Use"}),"\n",(0,i.jsx)(s.p,{children:"If testing both versions simultaneously:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Edit new cluster config\nsudo -iu postgres vi /var/lib/pgsql/18/data/postgresql.conf\n\n# Change port\nport = 5433\n"})}),"\n",(0,i.jsx)(s.h3,{id:"permission-denied",children:"Permission Denied"}),"\n",(0,i.jsx)(s.p,{children:"Ensure postgres user owns all files:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo chown -R postgres:postgres /var/lib/pgsql/18/data\n"})}),"\n",(0,i.jsx)(s.h3,{id:"selinux-issues",children:"SELinux Issues"}),"\n",(0,i.jsx)(s.p,{children:"If SELinux blocks operations:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Check SELinux denials\nsudo ausearch -m avc -ts recent\n\n# Temporarily disable (troubleshooting only)\nsudo setenforce 0\n\n# Re-enable\nsudo setenforce 1\n"})}),"\n",(0,i.jsx)(s.h3,{id:"connection-refused",children:"Connection Refused"}),"\n",(0,i.jsx)(s.p,{children:"Check if PostgreSQL is listening:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo ss -tlnp | grep postgres\n"})}),"\n",(0,i.jsx)(s.p,{children:"Check firewall:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo firewall-cmd --list-all\nsudo firewall-cmd --add-service=postgresql --permanent\nsudo firewall-cmd --reload\n"})}),"\n",(0,i.jsx)(s.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Test in Development"}),": Always test the upgrade process in a non-production environment first"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Backup Everything"}),": Take a full backup before starting:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sudo -iu postgres pg_dumpall > /backup/full_backup.sql\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Schedule Maintenance Window"}),": Plan for downtime even though upgrade is fast"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Monitor After Upgrade"}),": Watch logs and performance metrics closely after upgrade"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Keep Old Packages"}),": Don't uninstall old version immediately; wait a few days"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Document Settings"}),": Keep notes of custom configurations and changes made"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Extension Compatibility"}),": Verify all extensions have versions compatible with new PostgreSQL"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.postgresql.org/docs/current/pgupgrade.html",children:"PostgreSQL Upgrade Documentation"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.postgresql.org/docs/18/release-18.html",children:"PostgreSQL 18 Release Notes"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.postgresql.org/docs/current/app-pgupgrade.html",children:"pg_upgrade Reference"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://yum.postgresql.org/",children:"PostgreSQL YUM Repository"})}),"\n"]})]})}function h(e={}){let{wrapper:s}={...(0,l.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},65:function(e,s,n){n.d(s,{Z:function(){return a},a:function(){return t}});var r=n(7294);let i={},l=r.createContext(i);function t(e){let s=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);