"use strict";(self.webpackChunkdocusaurus_osebna=self.webpackChunkdocusaurus_osebna||[]).push([["49"],{2485:function(e,n,s){s.r(n),s.d(n,{metadata:()=>r,contentTitle:()=>t,default:()=>p,assets:()=>o,toc:()=>c,frontMatter:()=>a});var r=JSON.parse('{"id":"postgresql/streaming-replication","title":"PostgreSQL Streaming Replication","description":"Guide for setting up PostgreSQL streaming replication with a primary-standby configuration, including optional Pgpool-II for connection pooling and automatic failover.","source":"@site/docs/postgresql/streaming-replication.mdx","sourceDirName":"postgresql","slug":"/postgresql/streaming-replication","permalink":"/docs/postgresql/streaming-replication","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Upgrading PostgreSQL on AlmaLinux","permalink":"/docs/postgresql/upgrade-postgresql"},"next":{"title":"High Availability with Patroni & etcd","permalink":"/docs/postgresql/patroni-cluster"}}'),i=s("5893"),l=s("65");let a={sidebar_position:4},t="PostgreSQL Streaming Replication",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Part 1: Primary Server Setup",id:"part-1-primary-server-setup",level:2},{value:"Step 1: Configure PostgreSQL on Primary",id:"step-1-configure-postgresql-on-primary",level:3},{value:"Configuration Explanation",id:"configuration-explanation",level:4},{value:"Step 2: Configure Authentication",id:"step-2-configure-authentication",level:3},{value:"Step 3: Create Replication User",id:"step-3-create-replication-user",level:3},{value:"Step 4: Restart Primary Server",id:"step-4-restart-primary-server",level:3},{value:"Part 2: Standby Server Setup",id:"part-2-standby-server-setup",level:2},{value:"Step 1: Configure PostgreSQL on Standby",id:"step-1-configure-postgresql-on-standby",level:3},{value:"Step 2: Backup Existing Data",id:"step-2-backup-existing-data",level:3},{value:"Step 3: Initialize Standby from Primary",id:"step-3-initialize-standby-from-primary",level:3},{value:"Options Explanation",id:"options-explanation",level:4},{value:"Step 4: Set Permissions",id:"step-4-set-permissions",level:3},{value:"Step 5: Start Standby Server",id:"step-5-start-standby-server",level:3},{value:"Part 3: Verify Replication",id:"part-3-verify-replication",level:2},{value:"On Primary Server",id:"on-primary-server",level:3},{value:"On Standby Server",id:"on-standby-server",level:3},{value:"Test Replication",id:"test-replication",level:3},{value:"Part 4: Pgpool-II Setup (Optional)",id:"part-4-pgpool-ii-setup-optional",level:2},{value:"Install Pgpool-II",id:"install-pgpool-ii",level:3},{value:"Configure Pgpool-II",id:"configure-pgpool-ii",level:3},{value:"Start Pgpool-II",id:"start-pgpool-ii",level:3},{value:"Test Pgpool-II",id:"test-pgpool-ii",level:3},{value:"Managing Pgpool-II",id:"managing-pgpool-ii",level:2},{value:"Manually Set Node Status",id:"manually-set-node-status",level:3},{value:"Debug Mode",id:"debug-mode",level:3},{value:"View Logs",id:"view-logs",level:3},{value:"Failover Testing",id:"failover-testing",level:2},{value:"Simulate Primary Failure",id:"simulate-primary-failure",level:3},{value:"Check New Primary",id:"check-new-primary",level:3},{value:"Manual Failover",id:"manual-failover",level:3},{value:"Monitoring",id:"monitoring",level:2},{value:"Check Replication Lag",id:"check-replication-lag",level:3},{value:"Monitor WAL Files",id:"monitor-wal-files",level:3},{value:"Calculate Replication Delay",id:"calculate-replication-delay",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Replication Not Starting",id:"replication-not-starting",level:3},{value:"Standby Falls Behind",id:"standby-falls-behind",level:3},{value:"Connection Refused",id:"connection-refused",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Security Enhancements",id:"security-enhancements",level:2},{value:"Use SSL for Replication",id:"use-ssl-for-replication",level:3},{value:"Use Replication Slots",id:"use-replication-slots",level:3},{value:"Additional Resources",id:"additional-resources",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"postgresql-streaming-replication",children:"PostgreSQL Streaming Replication"})}),"\n",(0,i.jsx)(n.p,{children:"Guide for setting up PostgreSQL streaming replication with a primary-standby configuration, including optional Pgpool-II for connection pooling and automatic failover."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"Streaming replication provides:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High Availability"}),": Automatic failover to standby server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Load Balancing"}),": Distribute read queries across replicas"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Redundancy"}),": Real-time data replication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Zero Data Loss"}),": With synchronous replication"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        Replication        \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Primary   \u2502 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500> \u2502   Standby   \u2502\n\u2502 192.168.1.51\u2502                            \u2502 192.168.1.52\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502                                           \u2502\n       \u2502              \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510             \u2502\n       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502  Pgpool-II  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502 192.168.1.50\u2502\n                      \u2502  Port: 9999 \u2502\n                      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,i.jsx)(n.h2,{id:"part-1-primary-server-setup",children:"Part 1: Primary Server Setup"}),"\n",(0,i.jsx)(n.h3,{id:"step-1-configure-postgresql-on-primary",children:"Step 1: Configure PostgreSQL on Primary"}),"\n",(0,i.jsx)(n.p,{children:"Edit the main configuration file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/postgresql/15/main/postgresql.conf\n"})}),"\n",(0,i.jsx)(n.p,{children:"Add or modify these settings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"# Network\nlisten_addresses = '*'\n\n# Replication settings\nwal_level = replica\nmax_wal_senders = 10\nwal_keep_size = 256\n\n# Standby settings\nhot_standby = on\nwal_log_hints = on\n\n# Synchronous replication (for zero data loss)\nsynchronous_commit = remote_apply\nsynchronous_standby_names = '*'\n"})}),"\n",(0,i.jsx)(n.h4,{id:"configuration-explanation",children:"Configuration Explanation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"wal_level = replica"}),": Enable WAL (Write-Ahead Log) for replication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"max_wal_senders = 10"}),": Maximum number of standby servers (adjust as needed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"wal_keep_size = 256"}),": Keep 256MB of WAL files for standby servers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hot_standby = on"}),": Allow read queries on standby servers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"wal_log_hints = on"}),": Required for pg_rewind"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"synchronous_commit = remote_apply"}),": Wait for standby to apply changes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"synchronous_standby_names = '*'"}),": All standbys are synchronous"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"Synchronous vs Asynchronous",type:"info",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Synchronous"})," (",(0,i.jsx)(n.code,{children:"remote_apply"}),"): Zero data loss, but slower commits\n",(0,i.jsx)(n.strong,{children:"Asynchronous"}),": Faster, but potential data loss if primary fails"]})}),"\n",(0,i.jsx)(n.h3,{id:"step-2-configure-authentication",children:"Step 2: Configure Authentication"}),"\n",(0,i.jsx)(n.p,{children:"Edit the host-based authentication file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/postgresql/15/main/pg_hba.conf\n"})}),"\n",(0,i.jsx)(n.p,{children:"Add replication connection rules:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"# TYPE  DATABASE        USER            ADDRESS                 METHOD\nhost    replication     rep_user        192.168.1.52/32         scram-sha-256\nhost    replication     rep_user        192.168.1.0/24          scram-sha-256\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Replace ",(0,i.jsx)(n.code,{children:"192.168.1.52"})," with your standby server IP address."]}),"\n",(0,i.jsx)(n.h3,{id:"step-3-create-replication-user",children:"Step 3: Create Replication User"}),"\n",(0,i.jsx)(n.p,{children:"Connect to PostgreSQL and create the replication user:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"psql\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Create replication user\nCREATE USER rep_user REPLICATION LOGIN ENCRYPTED PASSWORD 'YourSecurePassword';\n\n-- Create monitoring user (optional, for Pgpool-II)\nCREATE USER monitor WITH ENCRYPTED PASSWORD 'MonitorPassword';\n\n-- Create monitoring database (optional)\nCREATE DATABASE monitor;\n\n-- Grant necessary privileges\nGRANT pg_monitor TO monitor;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-4-restart-primary-server",children:"Step 4: Restart Primary Server"}),"\n",(0,i.jsx)(n.p,{children:"Apply the configuration changes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart postgresql\n"})}),"\n",(0,i.jsx)(n.p,{children:"Verify it's running:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status postgresql\n"})}),"\n",(0,i.jsx)(n.h2,{id:"part-2-standby-server-setup",children:"Part 2: Standby Server Setup"}),"\n",(0,i.jsx)(n.h3,{id:"step-1-configure-postgresql-on-standby",children:"Step 1: Configure PostgreSQL on Standby"}),"\n",(0,i.jsx)(n.p,{children:"Edit the configuration file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/postgresql/15/main/postgresql.conf\n"})}),"\n",(0,i.jsx)(n.p,{children:"Add these settings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"# Network\nlisten_addresses = '*'\n\n# Primary connection info\nprimary_conninfo = 'host=192.168.1.51 port=5432 user=rep_user password=YourSecurePassword'\n\n# Standby settings\nhot_standby = on\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Primary Connection String",type:"tip",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"primary_conninfo"})," tells the standby where to connect. Adjust the host, port, and credentials to match your primary server."]})}),"\n",(0,i.jsx)(n.h3,{id:"step-2-backup-existing-data",children:"Step 2: Backup Existing Data"}),"\n",(0,i.jsx)(n.p,{children:"Stop PostgreSQL and backup the existing data directory:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop postgresql\nsudo mv /var/lib/postgresql/15/main /var/lib/postgresql/15/main-backup\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-3-initialize-standby-from-primary",children:"Step 3: Initialize Standby from Primary"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"pg_basebackup"})," to copy data from the primary:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo -u postgres pg_basebackup \\\n  -h 192.168.1.51 \\\n  -p 5432 \\\n  -U rep_user \\\n  -Fp \\\n  -Xs \\\n  -P \\\n  -R \\\n  -D /var/lib/postgresql/15/main\n"})}),"\n",(0,i.jsx)(n.h4,{id:"options-explanation",children:"Options Explanation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-h"}),": Primary server hostname/IP"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-p"}),": Primary server port"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-U"}),": Replication user"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-Fp"}),": Plain format (regular directory)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-Xs"}),": Stream WAL files during backup"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-P"}),": Show progress"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-R"}),": Create standby.signal and write connection info"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-D"}),": Target data directory"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You'll be prompted for the replication user's password."}),"\n",(0,i.jsx)(n.h3,{id:"step-4-set-permissions",children:"Step 4: Set Permissions"}),"\n",(0,i.jsx)(n.p,{children:"Fix permissions on the new data directory:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo chmod 0700 /var/lib/postgresql/15/main\nsudo chown -R postgres:postgres /var/lib/postgresql/15/main\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-5-start-standby-server",children:"Step 5: Start Standby Server"}),"\n",(0,i.jsx)(n.p,{children:"Start PostgreSQL on the standby:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start postgresql\nsudo systemctl status postgresql\n"})}),"\n",(0,i.jsx)(n.h2,{id:"part-3-verify-replication",children:"Part 3: Verify Replication"}),"\n",(0,i.jsx)(n.h3,{id:"on-primary-server",children:"On Primary Server"}),"\n",(0,i.jsx)(n.p,{children:"Check replication status:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'psql -x -c "SELECT * FROM pg_stat_replication;"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Expected output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"-[ RECORD 1 ]----+------------------------------\npid              | 12345\nusesysid         | 16384\nusename          | rep_user\napplication_name | walreceiver\nclient_addr      | 192.168.1.52\nclient_hostname  | \nclient_port      | 54321\nbackend_start    | 2025-10-20 10:00:00.000000+00\nbackend_xmin     | \nstate            | streaming\nsent_lsn         | 0/3000000\nwrite_lsn        | 0/3000000\nflush_lsn        | 0/3000000\nreplay_lsn       | 0/3000000\nwrite_lag        | \nflush_lag        | \nreplay_lag       | \nsync_priority    | 1\nsync_state       | sync\n"})}),"\n",(0,i.jsx)(n.p,{children:"Key fields:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"state"}),": Should be ",(0,i.jsx)(n.code,{children:"streaming"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sync_state"}),": Should be ",(0,i.jsx)(n.code,{children:"sync"})," (synchronous) or ",(0,i.jsx)(n.code,{children:"async"})," (asynchronous)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"on-standby-server",children:"On Standby Server"}),"\n",(0,i.jsx)(n.p,{children:"Check if server is in recovery mode:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'psql -c "SELECT pg_is_in_recovery();"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Should return ",(0,i.jsx)(n.code,{children:"t"})," (true)."]}),"\n",(0,i.jsx)(n.h3,{id:"test-replication",children:"Test Replication"}),"\n",(0,i.jsx)(n.p,{children:"On primary, create a test table:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE replication_test (id INT, data TEXT);\nINSERT INTO replication_test VALUES (1, 'Test data');\n"})}),"\n",(0,i.jsx)(n.p,{children:"On standby, verify the data:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM replication_test;\n"})}),"\n",(0,i.jsx)(n.p,{children:"You should see the same data (standby is read-only)."}),"\n",(0,i.jsx)(n.h2,{id:"part-4-pgpool-ii-setup-optional",children:"Part 4: Pgpool-II Setup (Optional)"}),"\n",(0,i.jsx)(n.p,{children:"Pgpool-II provides connection pooling, load balancing, and automatic failover."}),"\n",(0,i.jsx)(n.h3,{id:"install-pgpool-ii",children:"Install Pgpool-II"}),"\n",(0,i.jsx)(n.p,{children:"On a third server (or on primary/standby):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Add PostgreSQL repository\nsudo sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list'\n\n# Import repository key\nwget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\n\n# Move key to proper location\nsudo mv /etc/apt/trusted.gpg /etc/apt/trusted.gpg.d/psql.gpg\n\n# Update and install\nsudo apt-get update\nsudo apt-get install -y pgpool2 libpgpool2 postgresql-15-pgpool2\n"})}),"\n",(0,i.jsx)(n.h3,{id:"configure-pgpool-ii",children:"Configure Pgpool-II"}),"\n",(0,i.jsx)(n.p,{children:"Edit the Pgpool configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/pgpool2/pgpool.conf\n"})}),"\n",(0,i.jsx)(n.p,{children:"Key configuration settings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"# Connection settings\nlisten_addresses = '*'\nport = 9999\nsocket_dir = '/var/run/postgresql'\n\n# Backend 0 (Primary)\nbackend_hostname0 = '192.168.1.51'\nbackend_port0 = 5432\nbackend_weight0 = 1\nbackend_flag0 = 'ALLOW_TO_FAILOVER'\n\n# Backend 1 (Standby)\nbackend_hostname1 = '192.168.1.52'\nbackend_port1 = 5432\nbackend_weight1 = 1\nbackend_flag1 = 'ALLOW_TO_FAILOVER'\n\n# Failover settings\nfailover_on_backend_error = on\nauto_failback = on\nauto_failback_interval = 1min\n\n# Load balancing\nload_balance_mode = on\n"})}),"\n",(0,i.jsx)(n.h3,{id:"start-pgpool-ii",children:"Start Pgpool-II"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable pgpool2\nsudo systemctl start pgpool2\nsudo systemctl status pgpool2\n"})}),"\n",(0,i.jsx)(n.h3,{id:"test-pgpool-ii",children:"Test Pgpool-II"}),"\n",(0,i.jsx)(n.p,{children:"Check pool nodes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'psql -h 192.168.1.50 -U postgres -p 9999 postgres -c "SHOW pool_nodes;"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Expected output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:" node_id | hostname      | port | status | lb_weight | role    | select_cnt\n---------+---------------+------+--------+-----------+---------+------------\n 0       | 192.168.1.51 | 5432 | up     | 0.500000  | primary | 0\n 1       | 192.168.1.52 | 5432 | up     | 0.500000  | standby | 0\n"})}),"\n",(0,i.jsx)(n.h2,{id:"managing-pgpool-ii",children:"Managing Pgpool-II"}),"\n",(0,i.jsx)(n.h3,{id:"manually-set-node-status",children:"Manually Set Node Status"}),"\n",(0,i.jsx)(n.p,{children:"If a node shows as down but is actually up:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Edit status file\nsudo nano /var/log/postgresql/pgpool_status\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Change ",(0,i.jsx)(n.code,{children:"down"})," to ",(0,i.jsx)(n.code,{children:"up"})," for the affected node."]}),"\n",(0,i.jsx)(n.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,i.jsx)(n.p,{children:"Run Pgpool in debug mode:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Don't detach (stay in foreground)\npgpool -D\n\n# With logging\npgpool -n &\n"})}),"\n",(0,i.jsx)(n.h3,{id:"view-logs",children:"View Logs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo tail -f /var/log/postgresql/pgpool.log\n"})}),"\n",(0,i.jsx)(n.h2,{id:"failover-testing",children:"Failover Testing"}),"\n",(0,i.jsx)(n.h3,{id:"simulate-primary-failure",children:"Simulate Primary Failure"}),"\n",(0,i.jsx)(n.p,{children:"On primary server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop postgresql\n"})}),"\n",(0,i.jsx)(n.p,{children:"Pgpool should automatically promote the standby to primary."}),"\n",(0,i.jsx)(n.h3,{id:"check-new-primary",children:"Check New Primary"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'psql -h 192.168.1.50 -U postgres -p 9999 -c "SHOW pool_nodes;"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The former standby should now show as ",(0,i.jsx)(n.code,{children:"primary"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"manual-failover",children:"Manual Failover"}),"\n",(0,i.jsx)(n.p,{children:"Promote standby to primary manually:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# On standby server\nsudo -u postgres /usr/lib/postgresql/15/bin/pg_ctl promote -D /var/lib/postgresql/15/main\n"})}),"\n",(0,i.jsx)(n.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,i.jsx)(n.h3,{id:"check-replication-lag",children:"Check Replication Lag"}),"\n",(0,i.jsx)(n.p,{children:"On primary:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT \n  client_addr,\n  state,\n  sent_lsn,\n  write_lsn,\n  flush_lsn,\n  replay_lsn,\n  write_lag,\n  flush_lag,\n  replay_lag\nFROM pg_stat_replication;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"monitor-wal-files",children:"Monitor WAL Files"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT pg_current_wal_lsn();  -- On primary\nSELECT pg_last_wal_receive_lsn();  -- On standby\nSELECT pg_last_wal_replay_lsn();  -- On standby\n"})}),"\n",(0,i.jsx)(n.h3,{id:"calculate-replication-delay",children:"Calculate Replication Delay"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT \n  EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) AS replication_delay_seconds;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"replication-not-starting",children:"Replication Not Starting"}),"\n",(0,i.jsx)(n.p,{children:"Check logs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo tail -f /var/log/postgresql/postgresql-15-main.log\n"})}),"\n",(0,i.jsx)(n.p,{children:"Common issues:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Incorrect ",(0,i.jsx)(n.code,{children:"pg_hba.conf"})," entry"]}),"\n",(0,i.jsxs)(n.li,{children:["Wrong password in ",(0,i.jsx)(n.code,{children:"primary_conninfo"})]}),"\n",(0,i.jsx)(n.li,{children:"Network connectivity issues"}),"\n",(0,i.jsx)(n.li,{children:"Firewall blocking port 5432"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"standby-falls-behind",children:"Standby Falls Behind"}),"\n",(0,i.jsxs)(n.p,{children:["Increase ",(0,i.jsx)(n.code,{children:"wal_keep_size"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"wal_keep_size = 1024  # Keep more WAL files\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or use replication slots:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- On primary\nSELECT * FROM pg_create_physical_replication_slot('standby_slot');\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"# On standby in primary_conninfo\nprimary_slot_name = 'standby_slot'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"connection-refused",children:"Connection Refused"}),"\n",(0,i.jsx)(n.p,{children:"Check PostgreSQL is listening:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo ss -tlnp | grep postgres\n"})}),"\n",(0,i.jsx)(n.p,{children:"Check firewall:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo firewall-cmd --add-service=postgresql --permanent\nsudo firewall-cmd --reload\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Synchronous Replication"})," for critical data (zero data loss)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitor Replication Lag"})," regularly"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test Failover"})," procedures in development"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Regular Backups"})," - replication is not a backup!"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitor Disk Space"})," - WAL files can accumulate"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use SSL"})," for replication connections in production"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Document Failover Procedures"})," for your team"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Set Up Alerts"})," for replication failures"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"security-enhancements",children:"Security Enhancements"}),"\n",(0,i.jsx)(n.h3,{id:"use-ssl-for-replication",children:"Use SSL for Replication"}),"\n",(0,i.jsx)(n.p,{children:"On primary, enable SSL:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"ssl = on\nssl_cert_file = '/etc/postgresql/15/main/server.crt'\nssl_key_file = '/etc/postgresql/15/main/server.key'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Update ",(0,i.jsx)(n.code,{children:"primary_conninfo"})," on standby:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"primary_conninfo = 'host=192.168.1.51 port=5432 user=rep_user password=YourPassword sslmode=require'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"use-replication-slots",children:"Use Replication Slots"}),"\n",(0,i.jsx)(n.p,{children:"Prevents primary from removing WAL files needed by standby:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- On primary\nSELECT * FROM pg_create_physical_replication_slot('standby1');\n"})}),"\n",(0,i.jsx)(n.p,{children:"Update standby configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"primary_slot_name = 'standby1'\n"})}),"\n",(0,i.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/high-availability.html",children:"PostgreSQL Replication Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.pgpool.net/docs/latest/en/html/",children:"Pgpool-II Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/app-pgbasebackup.html",children:"pg_basebackup Reference"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-REPLICATION-VIEW",children:"Monitoring Replication"})}),"\n"]})]})}function p(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65:function(e,n,s){s.d(n,{Z:function(){return t},a:function(){return a}});var r=s(7294);let i={},l=r.createContext(i);function a(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);